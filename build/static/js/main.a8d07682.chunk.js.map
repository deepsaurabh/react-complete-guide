{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onFilterChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","chartBarFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onCancel","type","min","step","onClick","NewExpense","showExpenseForm","setShowExpenseForm","enteredExpenseData","random","toString","onAddExpense","App","DUMMY_EXPENSES","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d07682.chunk.js","sourcesContent":["import \"./Card.css\";\n\nfunction Card(props) {\n    const classes = 'card ' + props.className;\n  return <div className={classes}>\n      {props.children}\n  </div>;\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpenseFilter = (props) => {\n  const filterCangeHandler = (event) => {\n    props.onFilterChange(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={filterCangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\nexport default ExpenseFilter;\n","import \"./ExpenseDate.css\";\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\nexport default ExpenseDate;\n","import React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"./../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (!props.items.length) {\n    return <h2 className=\"expenses-list__fallback\">No Expenses found.</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let chartBarFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    chartBarFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: chartBarFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\n\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointsValue = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointsValue);\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          label={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n        />\n      ))}\n    </div>\n  );\n};\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport Card from \"./../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangedHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter((expense) => {\n    return filteredYear == expense.date.getFullYear();\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter\n        selected={filteredYear}\n        onFilterChange={filterChangedHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n}\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    props.onCancel();\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n            value={enteredAmount}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n            value={enteredDate}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={props.onCancel}>\n            Cancel\n          </button>\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [showExpenseForm, setShowExpenseForm] = useState(false);\n\n  const onSaveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n  };\n  const showExpenseFormHandler = () => {\n    setShowExpenseForm(true);\n  };\n  const hideExpenseFormHandler = () => {\n    setShowExpenseForm(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!showExpenseForm && (\n        <button onClick={showExpenseFormHandler}>Add New Expense</button>\n      )}\n      {showExpenseForm && (\n        <ExpenseForm\n          onSaveExpenseData={onSaveExpenseDataHandler}\n          onCancel={hideExpenseFormHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nfunction App() {\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}